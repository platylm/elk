========== Basic ============
input {
	stdin{}
}

output {
	stdout {
		codec => rubydebug
	}
}



========== Working with Grok ==========
input {
	stdin{}
}

filter {
	grok {
		match => ["message", "\(%{HOSTNAME}/%{IPV4}:%{WORD:port}-%{WORD}\)%{LOGLEVEL}  %{WORD:sname}\[\] %{WORD:uuid} %{DATE_EU:date} %{TIME} %{GREEDYDATA} "]
	}
}

output {
	stdout {
		codec => rubydebug
	}
}

========== Read data from file =============
tag_on_failure => [ ]
multiline{
      pattern => "^\{"
      what => "previous"
      negate=> true
  }

mutate {
  gsub => ['message', "\n", " "]
}

mutate {
  gsub => ['message', "\r", " "]
}


========
input {
  file {
    path => "/Users/somkiat/data/slide/elasticsearch/TRUE/data/tmsapprxx/data4.log"
    start_position => "beginning"
  }
}

filter {
	grok {
		match => ["message", "\(%{HOSTNAME}/%{IPV4}:%{WORD:port}-%{WORD}\)%{LOGLEVEL}  %{WORD:sname}\[\] %{WORD:uuid} %{DATE_EU:date} %{TIME} %{GREEDYDATA} "]
	}
  if "_grokparsefailure" in [tags] {
    drop { }
  }
}

output {
	stdout {
		codec => rubydebug
	}
}
